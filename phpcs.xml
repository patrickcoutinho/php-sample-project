<?xml version="1.0" ?>
<ruleset name="PHP_CodeSniffer">

    <description>PHP_CodeSniffer configuration</description>

    <rule ref="PSR2">
        <exclude name="PEAR.Functions.FunctionCallSignature" />
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket" />
    </rule>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />
    </rule>
    <rule ref="Generic.ControlStructures.DisallowYodaConditions" />
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.SpaceAfterCast" />
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.LowerCaseKeyword" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat" />
    <rule ref="Squiz.Arrays.ArrayBracketSpacing" />
    <rule ref="Squiz.Commenting.DocCommentAlignment" />
    <rule ref="Squiz.Commenting.EmptyCatchComment" />
    <rule ref="Squiz.ControlStructures.ControlSignature" />
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" />
    <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned" />
    <rule ref="Squiz.Scope.MethodScope" />
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar" />
    </rule>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <!-- Global properties -->
    <!-- Please note that not every sniff uses them and they can be overwritten by rule -->
    <!-- Paranoya mode: Will generate more alerts but will miss less vulnerabilites. Good for assisting manual code review. -->
    <config name="ParanoiaMode" value="0" />

    <!-- BadFunctions -->
    <!-- PHP functions that can lead to security issues -->
    <rule ref="Security.BadFunctions.Asserts" />
    <rule ref="Security.BadFunctions.Backticks" />
    <rule ref="Security.BadFunctions.CallbackFunctions" />
    <rule ref="Security.BadFunctions.CryptoFunctions" />
    <rule ref="Security.BadFunctions.EasyRFI" />
    <rule ref="Security.BadFunctions.EasyXSS">
        <properties>
            <!-- Comment out to follow global ParanoiaMode -->
            <property name="forceParanoia" value="1" />
        </properties>
    </rule>
    <rule ref="Security.BadFunctions.ErrorHandling" />
    <rule ref="Security.BadFunctions.FilesystemFunctions" />
    <rule ref="Security.BadFunctions.FringeFunctions" />
    <rule ref="Security.BadFunctions.FunctionHandlingFunctions" />
    <rule ref="Security.BadFunctions.Mysqli" />
    <rule ref="Security.BadFunctions.NoEvals" />
    <rule ref="Security.BadFunctions.Phpinfos" />
    <rule ref="Security.BadFunctions.PregReplace" />
    <rule ref="Security.BadFunctions.SQLFunctions" />
    <rule ref="Security.BadFunctions.SystemExecFunctions" />

    <!-- CVE -->
    <!-- Entries from CVE database from vendor PHP and bugs.php.net -->
    <rule ref="Security.CVE.20132110" />
    <rule ref="Security.CVE.20134113" />

    <!-- Misc -->
    <rule ref="Security.Misc.BadCorsHeader" />
    <rule ref="Security.Misc.IncludeMismatch" />

</ruleset>